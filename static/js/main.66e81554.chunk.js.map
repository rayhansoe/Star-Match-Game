{"version":3,"sources":["math-utils.js","components/StarsDisplay.jsx","components/PlayNumber.jsx","components/PlayAgain.jsx","components/Game.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["utils","sum","arr","reduce","acc","curr","range","min","max","Array","from","length","_","i","random","Math","floor","randomSumIn","sets","sums","j","len","candidateSet","concat","candidateSum","push","StarsDisplay","props","count","map","starId","className","colors","available","used","wrong","candidate","PlayNumber","style","backgroundColor","status","onClick","number","PlayAgain","color","gameStatus","Game","timeLimit","useState","stars","setStars","availableNums","setAvailableNums","candidateNums","setCandidateNums","secondsLeft","setSecondsLeft","useEffect","timerId","setTimeout","clearTimeout","setGameState","newCandidateNums","newAvailableNums","filter","n","includes","useGameState","candidatesAreWrong","numberStatus","onNumberClick","currentStatus","cn","startNewGame","StarMatch","gameId","setGameId","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66e81554.chunk.js","sourcesContent":["// Math science\r\nconst utils = {\r\n\t// Sum an array\r\n\tsum: arr => arr.reduce((acc, curr) => acc + curr, 0),\r\n\r\n\t// create an array of numbers between min and max (edges included)\r\n\trange: (min, max) => Array.from({ length: max - min + 1 }, (_, i) => min + i),\r\n\r\n\t// pick a random number between min and max (edges included)\r\n\trandom: (min, max) => min + Math.floor(Math.random() * (max - min + 1)),\r\n\r\n\t// Given an array of numbers and a max...\r\n\t// Pick a random sum (< max) from the set of all available sums in arr\r\n\trandomSumIn: (arr, max) => {\r\n\t\tconst sets = [[]]\r\n\t\tconst sums = []\r\n\t\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\tfor (let j = 0, len = sets.length; j < len; j++) {\r\n\t\t\t\tconst candidateSet = sets[j].concat(arr[i])\r\n\t\t\t\tconst candidateSum = utils.sum(candidateSet)\r\n\t\t\t\tif (candidateSum <= max) {\r\n\t\t\t\t\tsets.push(candidateSet)\r\n\t\t\t\t\tsums.push(candidateSum)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sums[utils.random(0, sums.length - 1)]\r\n\t},\r\n}\r\n\r\nexport default utils\r\n","import utils from \"../math-utils\"\r\n\r\nconst StarsDisplay = props => (\r\n\t<>\r\n\t\t{utils.range(1, props.count).map(starId => (\r\n\t\t\t<div key={starId} className='star' />\r\n\t\t))}\r\n\t</>\r\n)\r\n\r\nexport default StarsDisplay\r\n","import React from \"react\"\r\n\r\nconst PlayNumber = props => (\r\n\t<button\r\n\t\tclassName='number'\r\n\t\tstyle={{ backgroundColor: colors[props.status] }}\r\n\t\tonClick={() => props.onClick(props.number, props.status)}>\r\n\t\t{props.number}\r\n\t</button>\r\n)\r\n\r\n// Color Theme\r\nconst colors = {\r\n\tavailable: \"lightgray\",\r\n\tused: \"lightgreen\",\r\n\twrong: \"lightcoral\",\r\n\tcandidate: \"deepskyblue\",\r\n}\r\n\r\nexport default PlayNumber\r\n","import React from \"react\"\r\n\r\nconst PlayAgain = props => (\r\n\t<div className='game-done'>\r\n\t\t<div className='message' style={{ color: props.gameStatus === \"lost\" ? \"red\" : \"green\" }}>\r\n\t\t\t{props.gameStatus === \"lost\" ? \"Game Over\" : \"Nice\"}\r\n\t\t</div>\r\n\t\t<button onClick={props.onClick}>Play Again</button>\r\n\t</div>\r\n)\r\n\r\nexport default PlayAgain\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nimport utils from \"../math-utils\"\r\n\r\nimport StarsDisplay from \"./StarsDisplay\"\r\nimport PlayNumber from \"./PlayNumber\"\r\nimport PlayAgain from \"./PlayAgain\"\r\n\r\nconst useGameState = timeLimit => {\r\n\tconst [stars, setStars] = useState(utils.random(1, 9))\r\n\tconst [availableNums, setAvailableNums] = useState(utils.range(1, 9))\r\n\tconst [candidateNums, setCandidateNums] = useState([])\r\n\tconst [secondsLeft, setSecondsLeft] = useState(10)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (secondsLeft > 0 && availableNums.length > 0) {\r\n\t\t\tconst timerId = setTimeout(() => setSecondsLeft(secondsLeft - 1), 1000)\r\n\t\t\treturn () => clearTimeout(timerId)\r\n\t\t}\r\n\t})\r\n\r\n\tconst setGameState = newCandidateNums => {\r\n\t\tif (utils.sum(newCandidateNums) !== stars) {\r\n\t\t\tsetCandidateNums(newCandidateNums)\r\n\t\t} else {\r\n\t\t\tconst newAvailableNums = availableNums.filter(n => !newCandidateNums.includes(n))\r\n\t\t\tsetStars(utils.randomSumIn(newAvailableNums, 9))\r\n\t\t\tsetAvailableNums(newAvailableNums)\r\n\t\t\tsetCandidateNums([])\r\n\t\t}\r\n\t}\r\n\r\n\treturn { stars, availableNums, candidateNums, secondsLeft, setGameState }\r\n}\r\n\r\nconst Game = props => {\r\n\tconst { stars, availableNums, candidateNums, secondsLeft, setGameState } = useGameState()\r\n\r\n\tconst candidatesAreWrong = utils.sum(candidateNums) > stars\r\n\tconst gameStatus = availableNums.length === 0 ? \"won\" : secondsLeft === 0 ? \"lost\" : \"active\"\r\n\r\n\tconst numberStatus = number => {\r\n\t\tif (!availableNums.includes(number)) {\r\n\t\t\treturn \"used\"\r\n\t\t}\r\n\r\n\t\tif (candidateNums.includes(number)) {\r\n\t\t\treturn candidatesAreWrong ? \"wrong\" : \"candidate\"\r\n\t\t}\r\n\r\n\t\treturn \"available\"\r\n\t}\r\n\r\n\tconst onNumberClick = (number, currentStatus) => {\r\n\t\tif (currentStatus === \"used\" || secondsLeft === 0) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst newCandidateNums =\r\n\t\t\tcurrentStatus === \"available\"\r\n\t\t\t\t? candidateNums.concat(number)\r\n\t\t\t\t: candidateNums.filter(cn => cn !== number)\r\n\r\n\t\tsetGameState(newCandidateNums)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='game'>\r\n\t\t\t<div className='help'>Pick 1 or more numbers that sum to the number of stars</div>\r\n\t\t\t<div className='body'>\r\n\t\t\t\t<div className='left'>\r\n\t\t\t\t\t{gameStatus !== \"active\" ? (\r\n\t\t\t\t\t\t<PlayAgain onClick={props.startNewGame} gameStatus={gameStatus} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<StarsDisplay count={stars} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='right'>\r\n\t\t\t\t\t{utils.range(1, 9).map(number => (\r\n\t\t\t\t\t\t<PlayNumber\r\n\t\t\t\t\t\t\tkey={number}\r\n\t\t\t\t\t\t\tstatus={numberStatus(number)}\r\n\t\t\t\t\t\t\tnumber={number}\r\n\t\t\t\t\t\t\tonClick={onNumberClick}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='timer'>Time Remaining: {secondsLeft}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Game\r\n","import React, { useState } from \"react\"\n\nimport \"../styles/App.css\"\n\nimport Game from \"./Game\"\n\nconst StarMatch = () => {\n\tconst [gameId, setGameId] = useState(1)\n\treturn <Game key={gameId} startNewGame={() => setGameId(gameId + 1)} />\n}\n\nconst App = () => <StarMatch />\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./styles/index.css\"\nimport App from \"./components/App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}